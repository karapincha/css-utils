@mixin spacer($start: 0, $end: 40, $marginPrefix: m, $paddingPrefix: p, $prefix: "") {
	$spacer: 1px;
	$spacers: ();
	$axis: (
		top: t,
		right: r,
		bottom: b,
		left: l,
	);
	$properties: (
		margin: m,
		padding: p,
	);

	// Push values to spacer array using start/end values
	@for $i from $start through $end {
		$spacers: map-merge(
			$spacers,
			(
				$i: (
					length: $spacer * $i,
				),
			)
		);
	}

	// Loop through properties
	@each $prop, $abbrev in $properties {
		// Loop through spacers
		@each $size, $lengths in $spacers {
			$length: map-get($lengths, length);

			// All axis
			.#{$prefix}#{$abbrev}-#{$size} {
				#{$prop}: $length $length !important;
			}

			// X axis
			.#{$prefix}#{$abbrev}x-#{$size} {
				#{$prop}-right: $length !important;
				#{$prop}-left: $length !important;
			}

			// Y axis
			.#{$prefix}#{$abbrev}y-#{$size} {
				#{$prop}-top: $length !important;
				#{$prop}-bottom: $length !important;
			}

			// Individual axis
			// Loop through axis
			@each $axis-prop, $axis-abbrev in $axis {
				.#{$prefix}#{$abbrev}#{$axis-abbrev}-#{$size} {
					#{$prop}-#{$axis-prop}: $length !important;
				}
			}
		}
	}

	// XY auto
	@each $prop, $abbrev in (margin: m, padding: p) {
		@each $axis-prop, $axis-abbrev in $axis {
			.#{$prefix}#{$abbrev}#{$axis-abbrev}-auto {
				#{$prop}-#{$axis-prop}: auto !important;
			}
		}
	}
}
