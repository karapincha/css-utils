@import "./mixins/utility-generator";
@import "./mixins/spacer-generator";

$enable-important-utilities: true !default;

$spacerStart: 0 !default;
$spacerEnd: 40 !default;
$spacer: 1px !default;
$spacers: (
	(
		auto: auto,
	)
) !default;

@for $i from $spacerStart through $spacerEnd {
	$spacers: map-merge(
		$spacers,
		(
			$i: $spacer * $i,
		)
	);
}

$spacerUtilities: (
	properties: (
		margin: m,
		padding: p,
	),
	axis: (
		t: top,
		r: right,
		b: bottom,
		l: left,
		x: (
			l: left,
			r: right,
		),
		y: (
			t: top,
			b: bottom,
		),
	),
) !default;

$utilities: () !default;
$utilities: map-merge(
	(
		"align": (
			property: vertical-align,
			class: align,
			values: baseline top middle bottom text-bottom text-top,
		),
		"float": (
			responsive: true,
			property: float,
			values: left right none,
		),
		"overflow": (
			property: overflow,
			values: auto hidden,
		),
		"font-size": (
			property: font-size,
			class: font-size,
			values: (
				xs: 12px,
				sm: 14px,
				base: 16px,
				lg: 18px,
				xl: 20px,
			),
		),
		"font-weight": (
			property: font-weight,
			class: font-weight,
			values: (
				regular: 400,
				medium: 500,
				semi-bold: 600,
				bold: 700,
				black: 800,
			),
		),
		"display": (
			property: display,
			class: d,
			values: none inline inline-block block table table-row table-cell flex inline-flex grid,
		),
		"position": (
			property: position,
			values: static relative absolute fixed sticky,
		),
		"max-width": (
			property: max-width,
			class: mw,
			values: (
				100: 100%,
			),
		),
		"viewport-width": (
			property: width,
			class: vw,
			values: (
				100: 100vw,
			),
		),
		"min-viewport-width": (
			property: min-width,
			class: min-vw,
			values: (
				100: 100vw,
			),
		),
		"height": (
			property: height,
			class: h,
			values: (
				25: 25%,
				50: 50%,
				75: 75%,
				100: 100%,
				auto: auto,
			),
		),
		"max-height": (
			property: max-height,
			class: mh,
			values: (
				100: 100%,
			),
		),
		"viewport-height": (
			property: height,
			class: vh,
			values: (
				100: 100vh,
			),
		),
		"min-viewport-height": (
			property: min-height,
			class: min-vh,
			values: (
				100: 100vh,
			),
		),
		// Flex utilities
			"flex":
			(
				responsive: true,
				property: flex,
				values: (
					fill: 1 1 auto,
				),
			),
		"flex-direction": (
			responsive: true,
			property: flex-direction,
			class: flex,
			values: row column row-reverse column-reverse,
		),
		"flex-grow": (
			responsive: true,
			property: flex-grow,
			class: flex,
			values: (
				grow-0: 0,
				grow-1: 1,
			),
		),
		"flex-shrink": (
			responsive: true,
			property: flex-shrink,
			class: flex,
			values: (
				shrink-0: 0,
				shrink-1: 1,
			),
		),
		"flex-wrap": (
			responsive: true,
			property: flex-wrap,
			class: flex,
			values: wrap nowrap wrap-reverse,
		),
		"justify-content": (
			responsive: true,
			property: justify-content,
			values: (
				start: flex-start,
				end: flex-end,
				center: center,
				between: space-between,
				around: space-around,
				evenly: space-evenly,
			),
		),
		"align-items": (
			responsive: true,
			property: align-items,
			values: (
				start: flex-start,
				end: flex-end,
				center: center,
				baseline: baseline,
				stretch: stretch,
			),
		),
		"align-content": (
			responsive: true,
			property: align-content,
			values: (
				start: flex-start,
				end: flex-end,
				center: center,
				between: space-between,
				around: space-around,
				stretch: stretch,
			),
		),
		"align-self": (
			responsive: true,
			property: align-self,
			values: (
				auto: auto,
				start: flex-start,
				end: flex-end,
				center: center,
				baseline: baseline,
				stretch: stretch,
			),
		),
		"order": (
			responsive: true,
			property: order,
			values: (
				first: -1,
				0: 0,
				1: 1,
				2: 2,
				3: 3,
				4: 4,
				5: 5,
				last: 6,
			),
		),
	),
	$utilities
);

@each $key, $utility in $utilities {
	@include generate-utility($utility);
}

@include spacer-utility($spacerUtilities, $spacers);
